export interface FileFilter {
    filterFiles(files: File[]): File[];
    acceptString?: string;
}
export declare class NullFileFilter implements FileFilter {
    filterFiles(files: File[]): File[];
}
export declare abstract class SimpleFileFilter implements FileFilter {
    filterFiles(files: File[]): File[];
    abstract checkFile(file: File): boolean;
}
export declare class FileExtensionFilter extends SimpleFileFilter {
    constructor(validExtensions?: string[]);
    acceptString: string;
    extensions: string[];
    private extRE;
    private checkExt(name);
    checkFile(f: File): boolean;
}
export declare class MimeExtensionFilter extends SimpleFileFilter {
    constructor(mimeTypes: string[]);
    checkFile(f: File): boolean;
    acceptString: string;
    mimeTypes: string[];
}
export declare class AcceptFileFilter extends SimpleFileFilter {
    constructor(acceptStr: string);
    acceptString: string;
    checkFile(f: File): boolean;
    private _acceptStr;
    private mime;
    private ext;
}
