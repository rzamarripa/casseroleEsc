"use strict";
var NullFileValidator = (function () {
    function NullFileValidator() {
    }
    NullFileValidator.prototype.validate = function (files) {
        return files.length > 0;
    };
    NullFileValidator.prototype.filterFiles = function (files) {
        return files;
    };
    return NullFileValidator;
}());
exports.NullFileValidator = NullFileValidator;
var FileExtensionValidator = (function () {
    function FileExtensionValidator(validExtensions) {
        this.extRE = /\.([^.]+)$/;
        this.extensions = validExtensions || [];
    }
    FileExtensionValidator.prototype.validate = function (files) {
        return files.some(this.checkFile, this);
    };
    FileExtensionValidator.prototype.filterFiles = function (files) {
        return files.filter(this.checkFile, this);
    };
    Object.defineProperty(FileExtensionValidator.prototype, "acceptString", {
        get: function () {
            return this.extensions.join(',');
        },
        enumerable: true,
        configurable: true
    });
    FileExtensionValidator.prototype.checkExt = function (name) {
        var m = this.extRE.exec(name);
        var ext = m && m[1];
        if (ext) {
            return this.extensions.some(function (e) { return ext == e; });
        }
        else {
            return false;
        }
    };
    FileExtensionValidator.prototype.checkFile = function (f) {
        return this.checkExt(f.name);
    };
    return FileExtensionValidator;
}());
exports.FileExtensionValidator = FileExtensionValidator;

//# sourceMappingURL=maps/file-validator.js.map
