{"version":3,"sources":["file-input.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qBACkD,eAElD,CAAC,CAFgE;AAEjE,4BAA2D,eAE3D,CAAC,CAFyE;AAuB1E;IAEE,4BACU,QAAkB,EACL,MAAe;QAD5B,aAAQ,GAAR,QAAQ,CAAU;QAMnB,aAAQ,GAAY,KAAK,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;QAIzB,eAAU,GAAyB,IAAI,mBAAY,EAAE,CAAC;QAR9D,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IAC7B,CAAC;IAS0C,qCAAQ,GAAR,UAAS,KAAuB;QACzE,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IAED,sBAAI,yCAAS;aAAb;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC;QACjD,CAAC;;;OAAA;IAED,qCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,MAAM,GAAG,IAAI,8BAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,MAAM,GAAG,IAAI,4BAAc,EAAE,CAAC;YACrC,CAAC;QACH,CAAC;IACH,CAAC;IAED,kCAAK,GAAL;QACE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAC1E,CAAC;IA/BD;QAAC,YAAK,EAAE;;wDAAA;IACR;QAAC,YAAK,EAAE;;wDAAA;IAER;QAAC,YAAK,CAAC,YAAY,CAAC;;sDAAA;IAEpB;QAAC,aAAM,EAAE;;0DAAA;IAET;QAAC,mBAAY,CAAC,QAAQ,EAAE,CAAC,eAAe,CAAC,CAAC;;;;sDAAA;IA0B1C;QAAC,gBAAS,CAAC,MAAM,CAAC;;oDAAA;IA/DpB;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;YACnC,QAAQ,EAAE,0LAIN;YACJ,MAAM,EAAE,CAAC,mKAYV,CAAC;SACH,CAAC;mBAKG,gBAAS,CAAC,QAAQ,CAAC;;0BALtB;IA+CF,yBAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,0BAAkB,qBA8C9B,CAAA","file":"file-input.component.js","sourcesContent":["import {Attribute, Component, ElementRef, EventEmitter, HostListener, Input,\n        Output, OnInit, Renderer, ViewChild} from '@angular/core'\n\nimport {AcceptFileFilter, FileFilter, NullFileFilter} from './file-filter'\n\n@Component({\n    selector: 'file-input, file-select',\n    template: `\n<ng-content></ng-content>\n<form #form>\n<input type=\"file\" title=\" \" [accept]=\"acceptStr\" [attr.multiple]=\"multiple || null\" [attr.disabled]=\"disabled || null\" />\n</form>`,\n    styles: [`\n:host {\n  display: block;\n  position: relative;\n}\ninput {\n  position: absolute;\n  opacity: 0;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n} `]\n})\nexport class FileInputComponent implements OnInit {\n\n  constructor(\n    private renderer: Renderer,\n    @Attribute('accept') accept?: string\n  ) {\n    this.accept = accept || '';\n  }\n\n  @Input() multiple: boolean = false;\n  @Input() disabled: boolean = false;\n\n  @Input(\"fileFilter\") filter: FileFilter;\n\n  @Output() fileUpload: EventEmitter<File[]> = new EventEmitter();\n\n  @HostListener('change', ['$event.target']) onChange(input: HTMLInputElement) {\n    let files = this.filter.filterFiles(Array.from(input.files));\n    if (files.length > 0) {\n      this.fileUpload.emit(files);\n      this.reset();\n    }\n  }\n\n  get acceptStr() {\n    return this.filter.acceptString || this.accept;\n  }\n\n  ngOnInit() {\n    if (!this.filter) {\n      if (this.accept) {\n        this.filter = new AcceptFileFilter(this.accept);\n      } else {\n        this.filter = new NullFileFilter();\n      }\n    }\n  }\n\n  reset() {\n    this.renderer.invokeElementMethod(this.form.nativeElement, 'reset', []);\n  }\n\n  @ViewChild('form')\n  private form: ElementRef;\n\n  private accept: string;\n}\n"],"sourceRoot":"/source/"}